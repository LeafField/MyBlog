{"pageProps":{"postData":{"id":"20221114","contentHTML":"<p>ヘッダーも作って少しはブログっぽくなったかな……？と思う今日この頃<br>\n<img src=\"/postImage/20221114.png\" alt=\"ブログの画像\"></p>\n<p>そしてヘッダーを作っている最中に大きな問題が orz<br>\njavascript 勉強初期からの相棒、IntersectionObsever 君がうまく機能してくれない/_ \\<br>\n何故なのか、必死に理由を探しつつ手探りしつつ色々なブログをあさっていたらこちらの\r\n<a href=\"https://miyauchi.dev/ja/posts/react-lazy-intersection/\">ブログ様</a>に答えが！</p>\n<pre><code>useEffect(() => {\r\n  const observer = new IntersectionObserver(([entry]) => {\r\n    if (entry.isIntersecting) {\r\n      setIsActive(true);\r\n    } else {\r\n      setIsActive(false);\r\n    }\r\n  });\r\n  observer.observe(headerRef.current);\r\n}, []);\n</code></pre>\n<p>IntersectionObserver に useRef を渡す場合.current が必須なのと（通常の javascript の e.target と同じ感覚でいた）この場合の entry は[]で囲う必要があった<br>\nref.current って配列……？<br>\nうーん(￣ ┰ ￣*)React って良くも悪くも独特なお作法多いなあ、思わず querySelecter に逃げそうになった</p>\n","title":"ReactにおけるIntersectionObserverの取り扱い","date":"2022-11-14","thumbnail":"/images/thumbnail04.jpg"},"nextID":"20221113","prevID":"20221115"},"__N_SSG":true}